package zhentao.zhang.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RefereeReservationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    public RefereeReservationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRefResIdIsNull() {
            addCriterion("ref_res_id is null");
            return (Criteria) this;
        }

        public Criteria andRefResIdIsNotNull() {
            addCriterion("ref_res_id is not null");
            return (Criteria) this;
        }

        public Criteria andRefResIdEqualTo(Integer value) {
            addCriterion("ref_res_id =", value, "refResId");
            return (Criteria) this;
        }

        public Criteria andRefResIdNotEqualTo(Integer value) {
            addCriterion("ref_res_id <>", value, "refResId");
            return (Criteria) this;
        }

        public Criteria andRefResIdGreaterThan(Integer value) {
            addCriterion("ref_res_id >", value, "refResId");
            return (Criteria) this;
        }

        public Criteria andRefResIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ref_res_id >=", value, "refResId");
            return (Criteria) this;
        }

        public Criteria andRefResIdLessThan(Integer value) {
            addCriterion("ref_res_id <", value, "refResId");
            return (Criteria) this;
        }

        public Criteria andRefResIdLessThanOrEqualTo(Integer value) {
            addCriterion("ref_res_id <=", value, "refResId");
            return (Criteria) this;
        }

        public Criteria andRefResIdIn(List<Integer> values) {
            addCriterion("ref_res_id in", values, "refResId");
            return (Criteria) this;
        }

        public Criteria andRefResIdNotIn(List<Integer> values) {
            addCriterion("ref_res_id not in", values, "refResId");
            return (Criteria) this;
        }

        public Criteria andRefResIdBetween(Integer value1, Integer value2) {
            addCriterion("ref_res_id between", value1, value2, "refResId");
            return (Criteria) this;
        }

        public Criteria andRefResIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ref_res_id not between", value1, value2, "refResId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdIsNull() {
            addCriterion("player_id is null");
            return (Criteria) this;
        }

        public Criteria andPlayerIdIsNotNull() {
            addCriterion("player_id is not null");
            return (Criteria) this;
        }

        public Criteria andPlayerIdEqualTo(Integer value) {
            addCriterion("player_id =", value, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdNotEqualTo(Integer value) {
            addCriterion("player_id <>", value, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdGreaterThan(Integer value) {
            addCriterion("player_id >", value, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("player_id >=", value, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdLessThan(Integer value) {
            addCriterion("player_id <", value, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdLessThanOrEqualTo(Integer value) {
            addCriterion("player_id <=", value, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdIn(List<Integer> values) {
            addCriterion("player_id in", values, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdNotIn(List<Integer> values) {
            addCriterion("player_id not in", values, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdBetween(Integer value1, Integer value2) {
            addCriterion("player_id between", value1, value2, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdNotBetween(Integer value1, Integer value2) {
            addCriterion("player_id not between", value1, value2, "playerId");
            return (Criteria) this;
        }

        public Criteria andGameTimeIsNull() {
            addCriterion("game_time is null");
            return (Criteria) this;
        }

        public Criteria andGameTimeIsNotNull() {
            addCriterion("game_time is not null");
            return (Criteria) this;
        }

        public Criteria andGameTimeEqualTo(Date value) {
            addCriterion("game_time =", value, "gameTime");
            return (Criteria) this;
        }

        public Criteria andGameTimeNotEqualTo(Date value) {
            addCriterion("game_time <>", value, "gameTime");
            return (Criteria) this;
        }

        public Criteria andGameTimeGreaterThan(Date value) {
            addCriterion("game_time >", value, "gameTime");
            return (Criteria) this;
        }

        public Criteria andGameTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("game_time >=", value, "gameTime");
            return (Criteria) this;
        }

        public Criteria andGameTimeLessThan(Date value) {
            addCriterion("game_time <", value, "gameTime");
            return (Criteria) this;
        }

        public Criteria andGameTimeLessThanOrEqualTo(Date value) {
            addCriterion("game_time <=", value, "gameTime");
            return (Criteria) this;
        }

        public Criteria andGameTimeIn(List<Date> values) {
            addCriterion("game_time in", values, "gameTime");
            return (Criteria) this;
        }

        public Criteria andGameTimeNotIn(List<Date> values) {
            addCriterion("game_time not in", values, "gameTime");
            return (Criteria) this;
        }

        public Criteria andGameTimeBetween(Date value1, Date value2) {
            addCriterion("game_time between", value1, value2, "gameTime");
            return (Criteria) this;
        }

        public Criteria andGameTimeNotBetween(Date value1, Date value2) {
            addCriterion("game_time not between", value1, value2, "gameTime");
            return (Criteria) this;
        }

        public Criteria andAddressIsNull() {
            addCriterion("address is null");
            return (Criteria) this;
        }

        public Criteria andAddressIsNotNull() {
            addCriterion("address is not null");
            return (Criteria) this;
        }

        public Criteria andAddressEqualTo(String value) {
            addCriterion("address =", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotEqualTo(String value) {
            addCriterion("address <>", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThan(String value) {
            addCriterion("address >", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThanOrEqualTo(String value) {
            addCriterion("address >=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThan(String value) {
            addCriterion("address <", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThanOrEqualTo(String value) {
            addCriterion("address <=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLike(String value) {
            addCriterion("address like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotLike(String value) {
            addCriterion("address not like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressIn(List<String> values) {
            addCriterion("address in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotIn(List<String> values) {
            addCriterion("address not in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressBetween(String value1, String value2) {
            addCriterion("address between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotBetween(String value1, String value2) {
            addCriterion("address not between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andGameStateIsNull() {
            addCriterion("game_state is null");
            return (Criteria) this;
        }

        public Criteria andGameStateIsNotNull() {
            addCriterion("game_state is not null");
            return (Criteria) this;
        }

        public Criteria andGameStateEqualTo(String value) {
            addCriterion("game_state =", value, "gameState");
            return (Criteria) this;
        }

        public Criteria andGameStateNotEqualTo(String value) {
            addCriterion("game_state <>", value, "gameState");
            return (Criteria) this;
        }

        public Criteria andGameStateGreaterThan(String value) {
            addCriterion("game_state >", value, "gameState");
            return (Criteria) this;
        }

        public Criteria andGameStateGreaterThanOrEqualTo(String value) {
            addCriterion("game_state >=", value, "gameState");
            return (Criteria) this;
        }

        public Criteria andGameStateLessThan(String value) {
            addCriterion("game_state <", value, "gameState");
            return (Criteria) this;
        }

        public Criteria andGameStateLessThanOrEqualTo(String value) {
            addCriterion("game_state <=", value, "gameState");
            return (Criteria) this;
        }

        public Criteria andGameStateLike(String value) {
            addCriterion("game_state like", value, "gameState");
            return (Criteria) this;
        }

        public Criteria andGameStateNotLike(String value) {
            addCriterion("game_state not like", value, "gameState");
            return (Criteria) this;
        }

        public Criteria andGameStateIn(List<String> values) {
            addCriterion("game_state in", values, "gameState");
            return (Criteria) this;
        }

        public Criteria andGameStateNotIn(List<String> values) {
            addCriterion("game_state not in", values, "gameState");
            return (Criteria) this;
        }

        public Criteria andGameStateBetween(String value1, String value2) {
            addCriterion("game_state between", value1, value2, "gameState");
            return (Criteria) this;
        }

        public Criteria andGameStateNotBetween(String value1, String value2) {
            addCriterion("game_state not between", value1, value2, "gameState");
            return (Criteria) this;
        }

        public Criteria andRefereeCountIsNull() {
            addCriterion("referee_count is null");
            return (Criteria) this;
        }

        public Criteria andRefereeCountIsNotNull() {
            addCriterion("referee_count is not null");
            return (Criteria) this;
        }

        public Criteria andRefereeCountEqualTo(String value) {
            addCriterion("referee_count =", value, "refereeCount");
            return (Criteria) this;
        }

        public Criteria andRefereeCountNotEqualTo(String value) {
            addCriterion("referee_count <>", value, "refereeCount");
            return (Criteria) this;
        }

        public Criteria andRefereeCountGreaterThan(String value) {
            addCriterion("referee_count >", value, "refereeCount");
            return (Criteria) this;
        }

        public Criteria andRefereeCountGreaterThanOrEqualTo(String value) {
            addCriterion("referee_count >=", value, "refereeCount");
            return (Criteria) this;
        }

        public Criteria andRefereeCountLessThan(String value) {
            addCriterion("referee_count <", value, "refereeCount");
            return (Criteria) this;
        }

        public Criteria andRefereeCountLessThanOrEqualTo(String value) {
            addCriterion("referee_count <=", value, "refereeCount");
            return (Criteria) this;
        }

        public Criteria andRefereeCountLike(String value) {
            addCriterion("referee_count like", value, "refereeCount");
            return (Criteria) this;
        }

        public Criteria andRefereeCountNotLike(String value) {
            addCriterion("referee_count not like", value, "refereeCount");
            return (Criteria) this;
        }

        public Criteria andRefereeCountIn(List<String> values) {
            addCriterion("referee_count in", values, "refereeCount");
            return (Criteria) this;
        }

        public Criteria andRefereeCountNotIn(List<String> values) {
            addCriterion("referee_count not in", values, "refereeCount");
            return (Criteria) this;
        }

        public Criteria andRefereeCountBetween(String value1, String value2) {
            addCriterion("referee_count between", value1, value2, "refereeCount");
            return (Criteria) this;
        }

        public Criteria andRefereeCountNotBetween(String value1, String value2) {
            addCriterion("referee_count not between", value1, value2, "refereeCount");
            return (Criteria) this;
        }

        public Criteria andRefereeRequireIsNull() {
            addCriterion("referee_require is null");
            return (Criteria) this;
        }

        public Criteria andRefereeRequireIsNotNull() {
            addCriterion("referee_require is not null");
            return (Criteria) this;
        }

        public Criteria andRefereeRequireEqualTo(String value) {
            addCriterion("referee_require =", value, "refereeRequire");
            return (Criteria) this;
        }

        public Criteria andRefereeRequireNotEqualTo(String value) {
            addCriterion("referee_require <>", value, "refereeRequire");
            return (Criteria) this;
        }

        public Criteria andRefereeRequireGreaterThan(String value) {
            addCriterion("referee_require >", value, "refereeRequire");
            return (Criteria) this;
        }

        public Criteria andRefereeRequireGreaterThanOrEqualTo(String value) {
            addCriterion("referee_require >=", value, "refereeRequire");
            return (Criteria) this;
        }

        public Criteria andRefereeRequireLessThan(String value) {
            addCriterion("referee_require <", value, "refereeRequire");
            return (Criteria) this;
        }

        public Criteria andRefereeRequireLessThanOrEqualTo(String value) {
            addCriterion("referee_require <=", value, "refereeRequire");
            return (Criteria) this;
        }

        public Criteria andRefereeRequireLike(String value) {
            addCriterion("referee_require like", value, "refereeRequire");
            return (Criteria) this;
        }

        public Criteria andRefereeRequireNotLike(String value) {
            addCriterion("referee_require not like", value, "refereeRequire");
            return (Criteria) this;
        }

        public Criteria andRefereeRequireIn(List<String> values) {
            addCriterion("referee_require in", values, "refereeRequire");
            return (Criteria) this;
        }

        public Criteria andRefereeRequireNotIn(List<String> values) {
            addCriterion("referee_require not in", values, "refereeRequire");
            return (Criteria) this;
        }

        public Criteria andRefereeRequireBetween(String value1, String value2) {
            addCriterion("referee_require between", value1, value2, "refereeRequire");
            return (Criteria) this;
        }

        public Criteria andRefereeRequireNotBetween(String value1, String value2) {
            addCriterion("referee_require not between", value1, value2, "refereeRequire");
            return (Criteria) this;
        }

        public Criteria andRewardIsNull() {
            addCriterion("reward is null");
            return (Criteria) this;
        }

        public Criteria andRewardIsNotNull() {
            addCriterion("reward is not null");
            return (Criteria) this;
        }

        public Criteria andRewardEqualTo(String value) {
            addCriterion("reward =", value, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardNotEqualTo(String value) {
            addCriterion("reward <>", value, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardGreaterThan(String value) {
            addCriterion("reward >", value, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardGreaterThanOrEqualTo(String value) {
            addCriterion("reward >=", value, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardLessThan(String value) {
            addCriterion("reward <", value, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardLessThanOrEqualTo(String value) {
            addCriterion("reward <=", value, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardLike(String value) {
            addCriterion("reward like", value, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardNotLike(String value) {
            addCriterion("reward not like", value, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardIn(List<String> values) {
            addCriterion("reward in", values, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardNotIn(List<String> values) {
            addCriterion("reward not in", values, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardBetween(String value1, String value2) {
            addCriterion("reward between", value1, value2, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardNotBetween(String value1, String value2) {
            addCriterion("reward not between", value1, value2, "reward");
            return (Criteria) this;
        }

        public Criteria andNoteIsNull() {
            addCriterion("note is null");
            return (Criteria) this;
        }

        public Criteria andNoteIsNotNull() {
            addCriterion("note is not null");
            return (Criteria) this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("note =", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("note <>", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("note >", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("note >=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("note <", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("note <=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("note like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("note not like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteIn(List<String> values) {
            addCriterion("note in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotIn(List<String> values) {
            addCriterion("note not in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("note between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("note not between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andIsReceiveIsNull() {
            addCriterion("is_receive is null");
            return (Criteria) this;
        }

        public Criteria andIsReceiveIsNotNull() {
            addCriterion("is_receive is not null");
            return (Criteria) this;
        }

        public Criteria andIsReceiveEqualTo(Boolean value) {
            addCriterion("is_receive =", value, "isReceive");
            return (Criteria) this;
        }

        public Criteria andIsReceiveNotEqualTo(Boolean value) {
            addCriterion("is_receive <>", value, "isReceive");
            return (Criteria) this;
        }

        public Criteria andIsReceiveGreaterThan(Boolean value) {
            addCriterion("is_receive >", value, "isReceive");
            return (Criteria) this;
        }

        public Criteria andIsReceiveGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_receive >=", value, "isReceive");
            return (Criteria) this;
        }

        public Criteria andIsReceiveLessThan(Boolean value) {
            addCriterion("is_receive <", value, "isReceive");
            return (Criteria) this;
        }

        public Criteria andIsReceiveLessThanOrEqualTo(Boolean value) {
            addCriterion("is_receive <=", value, "isReceive");
            return (Criteria) this;
        }

        public Criteria andIsReceiveIn(List<Boolean> values) {
            addCriterion("is_receive in", values, "isReceive");
            return (Criteria) this;
        }

        public Criteria andIsReceiveNotIn(List<Boolean> values) {
            addCriterion("is_receive not in", values, "isReceive");
            return (Criteria) this;
        }

        public Criteria andIsReceiveBetween(Boolean value1, Boolean value2) {
            addCriterion("is_receive between", value1, value2, "isReceive");
            return (Criteria) this;
        }

        public Criteria andIsReceiveNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_receive not between", value1, value2, "isReceive");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNull() {
            addCriterion("is_delete is null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNotNull() {
            addCriterion("is_delete is not null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteEqualTo(Boolean value) {
            addCriterion("is_delete =", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotEqualTo(Boolean value) {
            addCriterion("is_delete <>", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThan(Boolean value) {
            addCriterion("is_delete >", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_delete >=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThan(Boolean value) {
            addCriterion("is_delete <", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThanOrEqualTo(Boolean value) {
            addCriterion("is_delete <=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIn(List<Boolean> values) {
            addCriterion("is_delete in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotIn(List<Boolean> values) {
            addCriterion("is_delete not in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteBetween(Boolean value1, Boolean value2) {
            addCriterion("is_delete between", value1, value2, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_delete not between", value1, value2, "isDelete");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table referee_reservation
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table referee_reservation
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}